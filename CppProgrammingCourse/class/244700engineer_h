#ifndef ENGINEER_H
#define ENGINEER_H
#include "person.h"

class Engineer : private Person
{
  friend std::ostream &operator<<(std::ostream &out, const Engineer &engineer);

public:
  Engineer();
  ~Engineer();
  void build_something()
  {
    m_full_name = "jso Sno";
    m_age = 134;
    // m_address = "ssNo..";
  }

  // const对象不可以调用类中的非const成员函数
  int get_contract_count() const
  {
    return contract_count;
  }

public:
  // 所有名为add的函数（所有重载函数）
  using Person::add;

  // 也可以是public

public:
  using Person::get_address;
  //可行
  using Person::do_something;

protected:
  using Person::get_age;
  using Person::get_full_name;
  // using Person::m_address; //这个本来(对于他的基类Person来说)是private的 不允许改变

private:
  int contract_count{0};
};

#endif