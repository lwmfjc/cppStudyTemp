#ifndef CIRCAL_H
#define CIRCAL_H

#include "shape.h"
#include <string>
#include <string_view>
#include <iostream>
#include "oval.h"

class Circle : public Oval
{
public:
  Circle() = default;
  Circle(double radius,
         std::string_view description);
  ~Circle();

  virtual void draw(int color_depth) const
  {
    std::cout << "Circle::Drawing with color depth" << color_depth << m_description
              << std::endl;
  }
  // 子类可以不写virtual关键字
  /* virtual  void draw() const*/
  virtual void draw() const override
  {
    std::cout << "Circle::draw() called. Drawing " << m_description
              << " with radius: " << get_x_rad()
              << std::endl;
  }
};

#endif