#include <iostream>
#include <thread>
#include <vector>

int main()
{
  auto lamda = [](int x) -> void
  {
    std::cout << "hello from thread " << std::this_thread::get_id()
              << "! " << std::endl;
    std::cout << "Argument passed in: " << x << std::endl;
  };
  std::cout << "========" << std::endl;
  std::vector<std::jthread> threads;
  for (int i = 0; i < 10; i++)
  {
    threads.push_back(std::jthread(lamda, i)); 
  }
/*   for (int i = 0; i < 10; i++)
  { 
    threads[i].join();
  } */

  // Blocks the current thread until the thread identified by *this finishes its execution.
  // 阻止当前线程直到 *通过*识别的线程完成执行。
  // myThread.join();
  std::cout << "hello from my main thread" << std::endl;
  return 0;
}